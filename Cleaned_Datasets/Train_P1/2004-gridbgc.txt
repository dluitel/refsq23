1 Introduction
1.1 Purpose
1.2 Project Scope and Project Features
1.3 References
Reference the proposal document.


2 Overall Description
2.1 Product Perspective
2.1.1 Text Narrative
This project is to develop a grid-based software infrastructure to support bio-geo- chemical modeling. The application will use the Daymet surface weather interpolation engine for generating gridded surface weather datasets from observation data records. The Biome-BGC model will be used to perform BGC modeling activities.
The system shall provide a graphical user interface to all functions of the system. Grid technologies shall be utilized to provide secure and reliable communications to remote computing resources.
2.1.2 Context Diagram
2.2 User Classes and Characteristics
2.2.1 Scientists (Favored)
Scientific users are the favored and primary user class for the system. Scientific users will use the system to manage input data, run simulations, visualize results, and manage output data.
2.2.2 Portal Administrator
The portal administrator will be in charge of managing the day to day operations of the system. This user will be responsible for managing user accounts, managing user runs if needed, and general portal settings and monitoring.
2.2.3 Data Users (Lowest Priority)
Data users are researchers who need to use simulation output but who do not have the ability to initiate simulations.
2.3 Typical Usage Scenarios
2.3.1 Daymet Modeling Run
Scenario where the user goes to the portal to run a daymet run. This is the primary goal, do we need to address the issue where the first thing the user does is setup the supporting data?
2.3.2 BiomeBGC Modeling Run
Scenario where the user goes to the portal to run a BiomeBGC run. This is the primary goal, do we need to address the issue where the first thing the user does is setup the supporting data?
2.3.3 Visualization
Scenario where the users wants to visualize the output datasets
2.3.4 Analysis
Scenario where the user wants to perform post processing on the data, such as the model performance evaluation studies on the output.
2.3.5 Data download
Scenario where the user wants to pull download the output data for further analysis etc.
2.3.6 Data Publication
Scenario where the user wants to publish output data for the community, i.e. directly publish the data on dataportal.
2.4 Operating Environment
2.4.1 Web Portal
The web portal components shall integrate into the Dataportal Web Server at NCAR
2.4.2 Compute Nodes
The compute node software shall be developed and deployed for the Hemisphere Linux cluster at CU
2.4.3 Client User Interface
The system shall provide a web based (portal) user interface for all aspects of the system.
2.5 Design and Implementation Constraints
2.5.1 The system shall use the Globus toolkit.
2.5.2 NCAR Security policies and constraints.
2.6 User Documentation
2.6.1 Online Help Manual
1. Full online manual
2. Major sections listed in TOC
2.6.2 Context sensitive online help manual
1. Each page will have a context sensitive link to the help system
2. Each context sensitive help page will be displayed in a pop-up window.
3. The link will display the topic relevant for the page.
4. The TOC will not be displayed in the context sensitive view.
2.7
Assumptions and Dependencies
2.7.1 The system will use the NCAR Mass Storage System for all file based storage.


3 System Features
3.1 User Accounts
Access to the functional areas of the system will be controlled by user accounts.
3.1.1 Gatekeeper Accounts
1. All GridBGC users shall be required to have valid NCAR Gatekeeper accounts to use the system.
2. Not all Gatekeeper account holders will have access to the GridBGC system. Users must be approved by the GridBGC administrator(s) for access.
3.1.1.1 Passwords
1. NCAR Gatekeeper password policies will be governed by the NCAR Gatekeeper tools and policies. Enforcement of these policies and procedures will NOT be enforced through the GridBGC portal.
2. Users must use the existing Gatekeeper tools to manage their passwords.
3.1.2 User Account Information
1. The system shall retrieve all user information from the Gatekeeper account system. 3.1.2.1 User accounts will have the following status states:
1. Pending Confirmation
2. Pending Approval
3. Active
4. Locked
5. Deleted (Place holder for deleted accounts but needed to maintain internal data structures)
3.1.3 User Roles
1. The system shall support the following user roles:
1.1. User – General end user of the system
1.2. Administrator – Has additional permissions to administer the operation of the
system.
3.1.4 Account Creation
3.1.5 User Functionality
3.1.5.1 Apply for an account
End users can apply for an account directly through the web portal.
1. Users must enter all required fields
2. The user must enter their NCAR Gatekeeper username.
3.1.5.2 View account details
The user can view their current account details
1. User must be logged in to the portal
2. Display all the account properties
3. Password will not be displayed
3.1.5.3 Delete account
1. The system shall provide a means to request that the user account be deleted from the system.
2. The system shall notify the portal admin(s) about the delete requests
3.1.5.4 Login to system
The system shall require the user to enter their username and password to login to the system.
1. The user shall be prompted at the beginning of the session for their credentials, once logged in they will not be prompted for additional or different credentials.
2. All login actions shall be protected by using secure data channels
3. The system shall lock the account after 3 login attempts. This will require portal
admin action to unlock the account.
4. Admin users will be authenticated against the portal database.
5. Users will be authenticated against the NCAR Gatekeeper system.
3.1.6 Administrative Functions
3.1.6.1 Approve Accounts
1. Portal Admin(s) will receive e-mail notification when new accounts are ready for review.
2. Display a list of all accounts pending review
3. Approve specific account
4. Approve account
4.1. Add message
5. Reject account
5.1. Add message
3.1.6.2 Assign Template Submission Privileges
1. The system shall allow portal administrators the ability to control template submissions rights.
3.1.6.3 List Accounts
The portal admin shall have the ability to list the user accounts in the system
1. List all user accounts
2. List accounts pending approval
3. List all account deletion requests
4. List all locked accounts
3.1.6.4 Delete Accounts
1. Delete a specific user account
2. There operation will not be reversible
3. Data removal
3.1. Templates
3.1.1: All user submitted templates will NOT be deleted from disk
3.2. Shared Objects
3.2.1: All shared object that have NOT been referenced by dependant projects
will be deleted.
3.3. All other objects/projects
3.3.1: Will be deleted completely from the system.
3.1.6.5 Lock/Unlock accounts
1. The admin can lock accounts
1.1. The user will be notified via e-mail
1.2. Further logins will not be permitted until unlocked
1.3. Currently executing jobs will continue to run until the job ends or terminated by
the portal admin
2. The admin can unlock accounts
2.1. Once unlocked the user can login to the system and resume use
3.1.6.6 Job Management
1. The portal admin will have a display of all running jobs sorted by user
2. The status of each job and tile will be visible to the portal admin
3. The portal admin shall have the ability to terminate any user’s running jobs.
3.1.6.7 Assign User Roles
1. The system shall assign all user accounts to the scientist role by default.
2. The system shall allow the portal admin to change a user’s role in the system.
3.1.6.8 Resource Quotas (Lowest Priority)
Review the need to implement resource quotas if time permits at the end of the project.
3.2 Data Organization
The system will organize the system in to types of logical grouping elements: 
1. Objects
2. Projects
3.2.1 Objects
Objects will be elements the group related data elements in the system. Objects will be the mechanism by which data is shared and reused throughout the system.
3.2.2 Projects
Projects will be elements that group specific objects together to perform a unit of work.
3.2.3 Data Element Relationships
3.2.4 Data Integrity
1. The system shall prevent the user from changing object/project values once that project has been used in a model run. This is to preserve the input values that produced a certain set of output values.
2. Each object/project will have states which control when the user can change product values.
3. The system shall support the following states
3.1. Unlocked – The user can make changes as desired.
3.2. Locked – The user can not make any changes
3.3. Invalidated – A dependency has been modified in someway and object/project
may no longer have valid inputs or outputs.
NOTE: See specific object/project details for the logic rules for each type.
Go through the whole locked/invalidation sequence, try to do it at a very generic level.
3.3 Objects
Objects will manage datasets and references to other logically related datasets.
3.3.1 The system shall support 3 types of objects
3.3.1.1 List Objects
1. List objects will contain arbitrary points of data
2. The system will NOT enforce any spatial constraints on list datasets
3.3.1.2 Grid Objects
1. Grid objects will contain rectangular grid datasets.
3.3.1.3 Parameterization Objects
1. Parameterization projects will contain model specific parameter data
3.3.2 Sharing
1. Users can select to share specific objects with other users.
2. Users can specify which users to share the object with:
2.1. All users
2.2. Select specific users within the system
3. When a shared project is referenced in the system the underlying datasets will NOT
be copied.
4. Once a shared project has been referenced elsewhere in the system it will be in a
locked state.
3.3.3 Merging Objects
Users can create new dataset project by merging existing objects
1. Project must be of the same type, list or grid
2. Merging operation will always be used to create new datasets from two existing
datasets.
3. Merge sources can be:
3.1. Current users existing projects
3.2. Other users projects that have been shared
4. No data validation will be done at this stage
4.1. Will not check for duplicate data
4.2. Will not check for spatial relationships of data. 4.3. Will not check for missing values
5. Full copies of the source datasets will be made during the creation of the merged dataset.
6. The system shall display dataset metadata to allow users to screen data prior to merging operations.
3.4 Projects
Project will have two main functions within the system; contain references to supporting datasets and serve as the simulation run control element.
3.4.1 Project Type
1. The user shall specify the type of project during initial setup; either List or Grid
2. The system shall only allow the user to reference datasets of the same type as
specified in the project
3.4.2 Collaboration
1. Projects cannot be shared or be templates.
3.4.3 New Project Creation
1. The user can create new projects.
1. List data projects
2. Grid projects
3.4.4 Referenced Objects
1. The system shall allow the user to only select referenced objects that are of the appropriate type
1.1. List and Grid types matching shall be enforced.
3.5 Template Objects
System templates will provide a means of sharing expert knowledge within the portal.
3.5.1 Object Types
1. Not all Object types shall support templates, see specific object details for more details.
3.5.2
3.5.3 Access Control
1. Any user of the system shall be able to use a template.
3.5.4 Submission
1. Only users with template submission privileges can submit new templates.
3.5.5 Editing
1. Once a template has been submitted it can no longer be edited.
3.5.6 Deletion
1. The system shall allow the following users to delete templates from the system: 1.1. Portal Admin(s)
1.2. The user who originally created the template
3.5.7 Display
1. The system shall provide portal admin(s) with a list of all system templates by project type.
2. The system shall provide users with a list of their templates in the system.
3.5.8 Template Use
1. Any time a template is used the user shall get their own full private copy of the data
2. The user must supply a new project name when using a template before saving the
project.
3. If the template references a non-shared data resource the user must choose a new
dataset before saving the project.
Daymet Specific Objects and Projects
3.6 Projection Object
This object defines the projection parameters for a dataset.
3.6.1 Collaboration
1. Projection Objects can be templates.
3.6.2 Support Projection Types
The system shall support the following projection types
1. Geographic
2. UTM
3. Albers Conical Equal Area
4. Lambert Conformal Conic
5. Lambert Azimuthal Equal Area
6. Interrupted Goode Homolosine
7. Interrupted Mollweide
3.6.3 Creation
1. New Blank
2. Copied from system template.
3.6.4 Read
1. View List of projection projects
2. View Projection Details
3.6.5 Update
1. The project must be in an unlocked state
2. The user can change the parameter values
3. The user can NOT change the projection type
3.6.6 Delete
1. If the project is in an unlocked state
1.1. The project and all related data can be deleted.
2. If the project is in a locked state
2.1. The user shall be prompted to delete all projects that reference this project
following the candidate project deletion rules.
3.6.7 Data Downloads
1. This information will not be downloadable by the user.
3.7 Grid Registration Object
3.7.1 Collaboration
1. Projection Objects can be templates.
3.7.2 Creation
1. New Blank
2. Copied from system template
3.7.3 Read
1. View List of Grid Registration objects
2. View Grid Registration Details
3.7.4 Update
1. The project must be in an unlocked state
2. The user can change the parameter values
3.7.5 Delete
1. If the object is in an unlocked state
1.1. The project and all related data can be deleted.
2. If the object is in a locked state
2.1. The user shall be prompted to delete all projects that reference this object
following the candidate object deletion rules.
3.7.6 Data Downloads
1. This information will not be downloadable by the user.
3.8 Surface Observation Object
This dataset contains observed surface weather data. This is one the primary input data sets in the Daymet model.
3.8.1 Referenced Objects
None
3.8.2 Collaboration
1. Projection Objects can be shared.
3.8.3 Supported Object Types
1. List
3.8.4 Creation
1. New Blank Object
1.1. User must upload data files to the system
1.1.1: Reference required NetCDF file convention
1.1.2: Specify required archive structure
2. Merge existing objects
2.1. The user can combine 2 discrete objects into 1 new singular object
2.1.1: The system shall not perform any checking or conversion
3. Subset existing object
3.1. The user can create a new object from a subset of a single existing object. 3.2. How is the subset performed specified?
3.8.5 Read
1. The system shall display a list of all the objects the user currently has in the system
2. The system shall display the object details
2.1. Display all metadata associated for the object
2.1.1: The system shall display all the stations for object
2.1.2: The system shall display all the data values for each station
3.8.6 Update
1. Address the invalidation logic for locked state....
2. Delete the project and start over.
3.8.7 Delete
1. The system shall allow the user to delete an unlocked project.
2. Address the invalidation logic for locked state....
3. The system shall allow the user to delete a locked project under the following
conditions:
3.1. The user has selected to delete all associated projects that reference the
project.
4. The system shall delete all associated input and model output data for this project
during deletion.
3.8.8 Visualization (Low Priority)
1. TBD - Later
3.9 Site Data Object
Reference: Data model elements for this section 3.9.1 Referenced Datasets
None
3.9.2 Collaboration
1. Site Data Objects can be shared.
3.9.3 Supported Object Types
1. List 2. Grid
3.9.4 Creation
1. New Blank Object
1.1. User can upload files to the system
1.1.1: List File Formats
1.1.2: Specify required archive structure
2. Merge existing objects
3. Subset of existing object 3.1. Data extraction process
3.1.1: The user can enter a series of data points
3.1.2: The user can select a source object
3.1.3: The system shall extract the specified points from the dataset and store
them in a new dataset in the system.
3.9.5 Read
1. The system shall display a list of all the objects the user currently has in the system
2. The system shall display the object details
2.1. Display all metadata associated for the object
3.9.6 Update
1. Grid Type:
1.1. Delete and start over.
2. List Type:
2.1. The system shall provide user interface to manage the observation points 2.2. The system shall allow a user to add new data points
2.3. The system shall allow a user to edit existing data points
2.4. The system shall allow a user to delete existing data points
3.9.7 Delete
3.9.8 Visualization (Low Priority)
1. TBD - Later
3.10 Daymet Parameterization Object
This project contains all the parameterizations values for a daymet model run.
3.10.1 Collaboration
1. Daymet Parameterization Objects can be templates.
 1. The system shall allow the user to delete an unlocked object.
 2. The system shall allow the user to delete a locked object under the following
 conditions:
 2.1. The user has selected to delete all associated objects/projects that reference the
 project.
 3. The system shall delete all associated input and model output data for this project
 during deletion.
3.10.2 Creation
1. New Blank Object
1.1. The system shall provide a user interface to manage all parameterization
values.
3.10.3 Read
1. The system shall display a list of all the objects the user currently has in the system
2. The system shall display the object details
2.1. Display all metadata associated for the object
3.10.4 Update
1. Go through the locked / invalidation sequence 3.10.5 Delete
1. Go through the locked / invalidation sequence
3.11 DEM Object
Object that contains DEM datasets and the associated Analysis mask data.
3.11.1 Collaboration
1. DEM Objects can be shared.
3.11.2 Object Types
1. List datasets
2. Grid datasets
3.11.3 Creation
1. New Blank Object
1.1. User can upload files to the system
1.1.1: DEM Datasets
1.1.1.1. NetCDF
1.1.1.2. What is the native model format?
1.1.2: Analysis Masks 1.1.2.1. NetCDF
2. Merge existing objects 3.
3.11.4 Read
1. The system shall display a list of all the objects the user currently has in the system
2. The system shall display the object details
2.1. Display all metadata associated for the object
    1.1.2.2. What is the native model format?
 1.1.3: Other Datasets?
3.11.5 Update
1. Go through the locked / invalidation sequence 3.11.6 Delete
1. Go through the locked / invalidation sequence
3.11.7 Visualization (Low Priority)
1. TBD – Later
3.12 Analysis Mask Object
3.12.1 Collaboration
1. Analysis Mask objects can be shared.
3.12.2 Object Types
1. List datasets
2. Grid datasets
3.12.3 Creation
1. New Blank Object
1.1. User can upload files to the system
1.1.1: DEM Datasets
1.1.1.1. NetCDF
1.1.1.2. What is the native model format?
1.1.2: Analysis Masks 1.1.2.1. NetCDF
2. Merge existing objects
3.12.4 Read
1. The system shall display a list of all the objects the user currently has in the system
2. The system shall display the object details
2.1. Display all metadata associated for the object
3.12.5 Update
2. Go through the locked / invalidation sequence
3.12.6 Delete
2. Go through the locked / invalidation sequence
    1.1.2.2. What is the native model format?
 1.1.3: Other Datasets?
3.12.7 Visualization (Low Priority)
2. TBD – Later
3.13 Daymet Project
This project aggregates all input objects and simulation control functions.
This project is the defining project for determining whether the project chain is list or grid based.
3.13.1 Referenced Objects
1. Site Data Object
2. Surface Weather Data Object
3. Projection Object
3.1. Must be the same as other input objects
4. Registration
4.1. Must be the same as other input objects
5. DEM Object
3.13.2 Templates
1. This project can NOT be a template.
3.13.3 Sharing
1. This project can NOT be shared.
3.13.4 Creation
1. New Blank Project
3.13.5 Read
1. The system shall display a list of all the projects the user currently has in the system
2. The system shall display the project details
2.1. Display all metadata associated for the project
3.13.6 Update
1. The system shall allow the user to delete an unlocked data project.
2. TODO – Reference the whole project dependency flow....
3.13.7 Delete
1. The system shall allow the user to delete an unlocked project.
2. The system shall allow the user to delete a locked project under the following
conditions:
2.1. The user has selected to delete all associated projects that reference the
project.
3. The system shall delete all associated input and model output data for this project during deletion.
3.13.8 Model Runs
1. The system shall allow user to start a new model run.
1.1. The system shall display a list of computational resources to select from.
1.2. The system shall provide the user with an approximate execution time estimate
based on the computational resource selected.
2. The system shall allow the user to monitor and control model runs
2.1. The system shall display a list of runs currently active for the user 2.2. The system shall display the overall run status
2.3. Daymet model runs shall be monitored on a tile by tile basis.
2.3.1: The system shall display the list of tiles for a run.
2.3.2: The system shall maintain the following information for each tile:
2.3.2.1. 2.3.2.2. 2.3.2.3.
Status – Queued, Running, Complete, Error
The system shall save and display Stdout messages. The system shall save and display Stderr messages.
3. The system shall allow the user to terminate a model run.
3.1. The system shall delete all output data associated with the run
3.1.1: Cached input files
3.1.2: Temporary files
3.1.3: Output files
4. The system shall allow a user to restart a model run.
4.1. The system shall only permit a run to be restarted under the following
conditions:
4.1.1: The previous instance has completed
4.1.2: The previous instance has been terminated
4.2. The system shall delete all previous model output prior to starting the run.
3.14 Daymet Output Object
This is the object that will contain the output data for a daymet run......
3.14.1 Collaboration
1. Daymet Output Objects can be shared.
3.14.2 Creation
1. The systems shall automatically create this object for completed simulation runs
3.14.3 Read
1. Display a list of objects for a user
2. Display the details of each object
3. List all tiles for a object.
3.14.4 Contained datasets
1. Cross Validation Output
2. Model Weather Data output
3.14.5 Deletion
1. Reference: the invalidation logic flow....
3.14.6 Data Downloading
1. The system shall allow the user to download the output data from the portal.
1.1. The system shall display a list of all the output tiles to the user.
1.2. The system shall allow the user to download the data files on a tile by tile basis. 1.3. The system shall allow the user to download the data in the native system
formats and conventions only.
BiomeBGC Specific Objects and Projects
3.15 Plant Functional Type Object
3.15.1 Sharing
1. Plant Functional Type Objects can be shared.
3.15.2 Templates
1. Plant Functional Type Objects can NOT be templates.
3.15.3 Creation
1. New Blank Object
1.1. User can upload files to the system
1.1.1: EPC File Format
1.1.2: Raw ASCII file format, not archived.
1.2. User can hand enter the values
3.15.4 PFT Id’s
1. User can hand enter the PFT Id number. This is so it can be related back to a site data project.
3.15.5 Read
1. List user’s objects
2. List object values [list object only]
3.15.6 Update
3.15.7 Delete
Reference deletion logic.
3.15.7.1 Download
1. The system shall allow the user to download the data in an EPC file format. 3.16 BiomeBGC Site Data Object
This will encapsulate the site data specific for the BiomeBGC runs....
3.16.1 Collaboration
1. Projection Objects can be shared.
References: Projection Registration
3.17 Output Specification Object
The biome bgc model has approximately 700 possible output variables. It is not realistically possible to use all the 700 output variables to perform meaningful analysis.
3.17.1 Collaboration
1. Output Specification Objects can be templates.
3.17.2 User Interface
3.17.2.1 The system shall provide a graphical user interface to manage the output parameters.
1. Parameter Categories
1.1. The system shall provide 1 level of parameter categorization
1.2. The system shall provide a list of all parameters for each category
1.3. The system shall allow the user to select individual parameters as needed.
2. Selected Categories
2.1. The system shall provide a display of the categories a user currently has
selected.
2.2. The system shall provide a method to add new categories to the project. 2.3. The system shall provide a method to remove categories from the project.
3.17.3 Creation
1. New Blank Object
2. Copy other user’s object
3.17.4 Read
1. The system shall display the list of objects the user currently has.
2. The system shall allow the user to view the details of a specific object.
3.17.5 Update
1. The system shall allow the user to modify an unlocked object.
3.17.6 Delete
1. The system shall allow users to delete unlocked objects.
2. The system shall allow users to delete locked objects under the following conditions:
2.1. The user shall be able to choose to delete all objects referencing this object.
3.18 Nitrogen Deposition Object
3.18.1 Collaboration
1. Nitrogen Deposition Objects can be templates.
3.18.2 Object Types Supported
1. List Datasets
2. Grid Datasets
3.18.3 Creation
1. New Blank object
1.1. User can upload files to the system
1.1.1: List File Formats
1.1.2: Specify required archive structure
1.2. User can hand enter the values [list project only]
1.2.1: Provide GUI interface for entering values
2. Merge existing list objects
3.18.4 Read
1. List user’s objects in the system
2. List individual object details
3.18.5 Update
1. Grid objects
1.1. Cannot be updated, must delete/create new.
2. List Objects
2.1. Unlocked projects can be edited via online GUI
3.18.6 Delete
1. The system shall allow the user to delete unlocked objects.
2. The system shall allow the user to delete locked objects.
2.1. All dependant objects/projects shall be invalidated
3.18.7 Invalidated Objects
1. The system shall change the project to an unlocked state.
2. Invalidate all dependant projects.
3.19 Disturbance Objects
A disturbance object contains the information representing climate factors that influence the biome-BGC model. This includes information such as fires and deforestation events.
A disturbance project will have a series of events.
Each disturbance project can have an unlimited number of events
Each event will have a particular date in time associated with it.
An event occurs at a particular point in time, it does not have an associated duration.
The system shall support the following types of events: 1. Fire
2. Deforestation
The user shall specify the intensity value for the event
TBD – Is there a specific range we can check for here?
3.19.1 Collaboration
1. Projection Objects can be templates.
3.19.2 Creation
1. The user shall be able to create a new disturbance object
3.19.3 Read
1. The system shall list the user’s objects in the system
2. The system shall list the object details
3.19.4 Update
1. Unlocked Objects
1.1. The system shall allow users to edit unlocked objects
2. Locked Objects
2.1. The system shall allow users to edit locked objects 2.2. The system shall invalidate dependent objects
3.19.5 Delete
1. The system shall allow the user to delete unlocked objects.
2. The system shall allow the user to delete locked objects.
2.1. All dependant objects/projects shall be invalidated
3.20 BiomeBGC Project
3.20.1 Referenced Projects
1. Daymet Output Object
2. BiomeBGC Site Data
3. PFT Object
4. Ouput Specification Project
3.20.2 Simulation Topology
1. The system shall allow the user to define a simulation topology
2. The user shall be able to create the following topology options
2.1. 1 Site x 1 PFT
2.2. 1 Site x all PFT’s 2.3. All Sites x 1 PFT’s 2.4. All Sites x All PFT’s 2.5. n Sites x 1 PFT 2.6. n Sites x All PFT’s 2.7. n Sites x n PFT’s 2.8. 1 Site x n PFT’s 2.9. All Sites x n PFT’s
2.10. Site Specific PFT List (number and weight) – TBD - What is this?
3.20.3 Creation
1. The system shall allow the user to create new blank projects
3.20.4 Read
2. The system shall list all the user’s projects in the system
3. The system shall display all the project details
3.20.5 Update
1. The system shall allow the user to change the project details for unlocked projects.
2. The system shall allow the user to ability to invalidate a locked project.
2.1. Will this trigger all running jobs to be terminated?
2.2. This will trigger all downstream projects to be invalidated.
3.20.6 Delete
3. The system shall allow the user to delete unlocked projects.
4. The system shall allow the user to delete locked projects.
4.1. All dependant objects/projects shall be invalidated
  3. Questions thoughts....
 3.1. Implies that all the PFT info will be stored in the database.
 3.2. ? How can we select the sites, implies file I/O to read the values
 3.2.1: Does this only apply to list projects where we can have some means of
 listing the sites in a dataset
 3.2.2: This implies that a list project contains all the site descriptors so they can
 be displayed on the GUI without MSS access.
3.20.7 Model Runs
1. The system shall allow user to start a new model run.
1.1. The system shall display a list of computational resources to select from.
2. The system shall allow the user to monitor and control model runs 2.1. The system shall display a list of runs currently active for the user 2.2. The system shall display the overall run status
2.3. BiomeBGC model runs shall be monitored on a tile by tile basis.
2.3.1: The system shall display the list of tiles for a run.
2.3.2: The system shall maintain the following information for each tile:
2.3.2.1. Status – Queued, Running, Complete, Errror
2.3.2.2. The system shall save and display Stdout messages. 2.3.2.3. The system shall save and display Stderr messages.
3. The system shall allow the user to terminate a model run.
3.1. The system shall delete all output data associated with the run
3.1.1: Cached input files
3.1.2: Temporary files
3.1.3: Output files
4. The system shall allow a user to restart a model run.
4.1. The system shall only permit a run to be restarted under the following
conditions:
4.1.1: The previous instance has completed
4.1.2: The previous instance has been terminated
3.20.8 Invalidated Projects
3. The system shall change the project to an unlocked state.
4. Invalidate all dependant projects.
5. The system shall delete the output data project if created
5.1. Delete all the files from disk storage as well.
3.21 BiomeBGC Output Object
This is the object that will contain the output data for a BiomeBGC run......
3.21.1 Sharing
2. BiomeBGC Output Objects can be shared.
3.21.2 Templates
1. BiomeBGC Output Objects can NOT be templates.
3.21.3 Creation
2. The systems shall automatically create this object for completed simulation runs
3.21.4 Read
4. Display a list of projects for a user
5. Display the details of each project
6. List all tiles for a project.
3.21.5 Deletion
2. Reference: the invalidation logic flow....
3.21.6 Data Downloading
2. The system shall allow the user to download the output data from the portal.
2.1. The system shall display a list of all the output tiles to the user.
2.2. The system shall allow the user to download the data files on a tile by tile basis. 2.3. The system shall allow the user to download the data in the native system
formats and conventions only.
3.22 Daymet Visualization Project
TBD
3.23 BiomeBGC Visualization Project
TBD
3.24 Evaluation Project
TBD
3.25 Portal Administration
3.25.1 Portal Metrics
1. Currently Registered Users
2. Data Metrics
2.1. Number of files 2.2. Total storage size 2.3. Average File size
3. Computational Metrics 3.1. # of jobs completed 3.2. # of jobs running 3.3. # of jobs queued
4. Template Metrics
4.1. # of templates by object type
5. Objects/Projects Metrics
5.1. # of Objects/Projects by type
5.2. # of Objects/Projects by type and by user
6. Shared Objects/Projects
6.1. # of Objects/Projects by type
6.2. # of Objects/Projects by type and by user
3.25.2 System Consistency Check
1. The system shall provide the portal admin a function to validate file references in the system correspond to actual files on the storage system.
2. The system shall generate a listing of any missing files.
3. Error Correction
3.25.2.1 Compute Node Resources
1. The system shall list all the compute nodes
2. The system shall display the compute node resource details
3. The system shall allow the admin to manage compute resources
3.1. Add new nodes 3.2. Lock a node 3.3. Unlock a node 3.4. Delete nodes
4. The system shall allow the admin to change compute node settings
4.1. TBD – Determine what the admin can change....
3.25.2.2 System Settings
 3.1. Could give the admin the ability to reset a file pointer to a new file on the storage
 system.
 3.2. Could give the admin the ability to invalidate/delete the object that corresponds
 to the inconsistent file pointer
 3.3. Other thoughts????
 1.


4 External Interface Requirements
4.1 User Interfaces
4.1.1 The system shall allow the portal admin to control the following system settings 1.1. TBD – List all the general configuration settings the admin has control over.
The web portal shall be usable in the following web browsers
1. Internet Explorer 6.0
2. Netscape 7.1
3. Safari 1.2.1?


5 The system shall require the users enable cookies to use the system.

5.1 Hardware Interfaces
5.1.1 NCAR Mass Storage System (MSS)
5.1.1.1 The system shall allow users the ability to store data on the NCAR Mass Storage System.
5.1.1.2 TBD – Can we use the users portal credentials to use the MSS or are we going to proxy the user through a central account with MSS access.
5.2 Software Interfaces
5.3 Communication Interfaces


6 Other Nonfunctional Requirements
6.1 Performance Requirements
6.2 Safety Requirements
6.3 Security Requirements
6.4 Software Quality Requirements


7 To Be Determined (TBD) Items


8 Appendix A: Data Dictionary and Data Model
Do example data dictionary


9 Appendix B: Analysis Models.
Workflows, GUI Maps, etc....
